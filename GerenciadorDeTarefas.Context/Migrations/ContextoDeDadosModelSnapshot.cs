// <auto-generated />
using System;
using GerenciadorDeTarefas.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GerenciadorDeTarefas.Context.Migrations
{
    [DbContext(typeof(ContextoDeDados))]
    partial class ContextoDeDadosModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("GerenciadorDeTarefas.Domain.Equipes.Equipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Equipes");
                });

            modelBuilder.Entity("GerenciadorDeTarefas.Domain.Funcionalidades.Funcionalidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Adicionado")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Detalhes")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Finalizacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Previsao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Prioridade")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjetoId")
                        .HasColumnType("integer");

                    b.Property<int>("Situacao")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Funcionalidades");
                });

            modelBuilder.Entity("GerenciadorDeTarefas.Domain.ManyToMany.EquipeUsuario", b =>
                {
                    b.Property<int>("IdEquipe")
                        .HasColumnType("integer");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer");

                    b.HasKey("IdEquipe", "IdUsuario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("EquipeUsuario");
                });

            modelBuilder.Entity("GerenciadorDeTarefas.Domain.Pessoas.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("GerenciadorDeTarefas.Domain.Projetos.Projeto", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Projeto");
                });

            modelBuilder.Entity("GerenciadorDeTarefas.Domain.Tarefas.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Adicionado")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Detalhes")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Finalizacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("FuncionalidadeId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Previsao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Prioridade")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjetoId")
                        .HasColumnType("integer");

                    b.Property<int>("Situacao")
                        .HasColumnType("integer");

                    b.Property<int?>("TarefaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FuncionalidadeId");

                    b.HasIndex("ProjetoId");

                    b.HasIndex("TarefaId");

                    b.ToTable("Tarefa");
                });

            modelBuilder.Entity("GerenciadorDeTarefas.Domain.Usuarios.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<int?>("PessoaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("GerenciadorDeTarefas.Domain.Funcionalidades.Funcionalidade", b =>
                {
                    b.HasOne("GerenciadorDeTarefas.Domain.Projetos.Projeto", null)
                        .WithMany("Funcionalidades")
                        .HasForeignKey("ProjetoId");
                });

            modelBuilder.Entity("GerenciadorDeTarefas.Domain.ManyToMany.EquipeUsuario", b =>
                {
                    b.HasOne("GerenciadorDeTarefas.Domain.Equipes.Equipe", "Equipe")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdEquipe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciadorDeTarefas.Domain.Usuarios.Usuario", "Usuario")
                        .WithMany("Equipes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GerenciadorDeTarefas.Domain.Projetos.Projeto", b =>
                {
                    b.HasOne("GerenciadorDeTarefas.Domain.Equipes.Equipe", "Equipe")
                        .WithMany("Projetos")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GerenciadorDeTarefas.Domain.Tarefas.Tarefa", b =>
                {
                    b.HasOne("GerenciadorDeTarefas.Domain.Funcionalidades.Funcionalidade", null)
                        .WithMany("Tarefas")
                        .HasForeignKey("FuncionalidadeId");

                    b.HasOne("GerenciadorDeTarefas.Domain.Projetos.Projeto", null)
                        .WithMany("Tarefas")
                        .HasForeignKey("ProjetoId");

                    b.HasOne("GerenciadorDeTarefas.Domain.Tarefas.Tarefa", null)
                        .WithMany("SubTarefas")
                        .HasForeignKey("TarefaId");
                });

            modelBuilder.Entity("GerenciadorDeTarefas.Domain.Usuarios.Usuario", b =>
                {
                    b.HasOne("GerenciadorDeTarefas.Domain.Pessoas.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId");
                });
#pragma warning restore 612, 618
        }
    }
}
